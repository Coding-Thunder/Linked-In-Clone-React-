{"version":3,"sources":["features/userSlice.js","components/headeroption/HeaderOption.js","firebase/firebase.js","components/header/header.jsx","components/Slidebar/Slidebar.js","components/Input Option/InputOption.jsx","components/Post/Post.jsx","components/Feed/Feed.jsx","components/Login/Login.js","components/Widgets/Widgets.jsx","App.js","app/store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","HeaderOption","Icon","avatar","title","onClick","useSelector","className","Avatar","src","photoUrl","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","Header","dispatch","useDispatch","alt","type","HomeIcon","SupervisorAccountIcon","BusinessCenterIcon","ChatIcon","NotificationIcon","signOut","Slidebar","recentItem","topic","photoURL","email","displayName","InputOption","color","style","Post","forwardRef","ref","description","message","ThumbUpAltOutlinedIcon","ChatOutlinedIcon","ShareOutlinedIcon","SendOutlinedIcon","Feed","useState","posts","setPosts","input","setInput","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","value","onChange","e","target","preventDefault","add","uid","timestamp","FieldValue","serverTimestamp","ImageIcon","SubscriptionIcon","EventNoteIcon","CalendarViewDayIcon","Login","setName","setEmail","password","setPassword","placeholder","signInWithEmailAndPassword","then","userAuth","catch","error","alert","createUserWithEmailAndPassword","updateProfile","Widgets","newsArticle","heading","subtitle","FiberManualRecord","App","unsubscribe","onAuthStateChanged","configureStore","reducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d6684d45.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    user: null,\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n\r\n    logout: (state) => {\r\n      state.user = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\nexport const selectUser = (state) => state.user.user;\r\n\r\nexport default userSlice.reducer;\r\n","import React from \"react\";\r\nimport \"./HeaderOption.css\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../../features/userSlice\";\r\n\r\nfunction HeaderOption({ Icon, avatar, title, onClick }) {\r\n  const user = useSelector(selectUser);\r\n  return (\r\n    <div onClick={onClick} className=\"headerOption\">\r\n      {Icon && <Icon className=\"headerOption__icon\" />}\r\n      {avatar && (\r\n        <Avatar className=\"headerOption__icon\" src={user?.photoUrl}></Avatar>\r\n      )}\r\n      <h3 className=\"headerOption__title\">{title}</h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HeaderOption;\r\n","import firebase from \"firebase\";\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDE3YnNH9C5zbUX4Id8JMBhHRso4En-dyU\",\r\n  authDomain: \"linkedincloneportfolio.firebaseapp.com\",\r\n  projectId: \"linkedincloneportfolio\",\r\n  storageBucket: \"linkedincloneportfolio.appspot.com\",\r\n  messagingSenderId: \"52394238153\",\r\n  appId: \"1:52394238153:web:51355fc14a0cd495a36d18\",\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebase.firestore();\r\nconst auth = firebase.auth();\r\n\r\nexport { db, auth, firebaseApp };\r\n","// CORE PACKAGES IMPORT STATEMENTS\r\nimport React from \"react\";\r\n\r\n// COMPONENTS IMPORT STATEMENTS\r\nimport HeaderOption from \"../headeroption/HeaderOption\";\r\n\r\n// CSS IMPORT STATEMENNTS\r\nimport \"./header.css\";\r\n\r\n// MATERIAL UI IMPORTS\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\r\nimport BusinessCenterIcon from \"@material-ui/icons/BusinessCenter\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport NotificationIcon from \"@material-ui/icons/Notifications\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logout } from \"../../features/userSlice\";\r\nimport { auth } from \"../../firebase/firebase\";\r\n\r\nfunction Header() {\r\n  const dispatch = useDispatch();\r\n\r\n  const logoutOfApp = () => {\r\n    dispatch(logout());\r\n    auth.signOut();\r\n  };\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header__left\">\r\n        <img\r\n          src=\"http://www.flaticon.com/svg/static/icons/svg/174/174857.svg\"\r\n          alt=\"\"\r\n        />\r\n\r\n        <div className=\"header__search\">\r\n          <SearchIcon />\r\n          <input type=\"text\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"header__right\">\r\n        <HeaderOption Icon={HomeIcon} title=\"Home\" />\r\n        <HeaderOption Icon={SupervisorAccountIcon} title=\"My Network\" />\r\n        <HeaderOption Icon={BusinessCenterIcon} title=\"Jobs\" />\r\n        <HeaderOption Icon={ChatIcon} title=\"Messaging\" />\r\n        <HeaderOption Icon={NotificationIcon} title=\"Notifications\" />\r\n        <HeaderOption avatar title=\"Me\" onClick={logoutOfApp} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { Avatar } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../../features/userSlice\";\r\nimport \"./Slidebar.css\";\r\n\r\nfunction Slidebar() {\r\n  const user = useSelector(selectUser);\r\n  const recentItem = (topic) => (\r\n    <div className=\"slidebar__recentItem\">\r\n      <span className=\"slidebar__hash\">#</span>\r\n      <p>{topic}</p>\r\n    </div>\r\n  );\r\n  return (\r\n    <div className=\"slidebar\">\r\n      <div className=\"slidebar__top\">\r\n        <img\r\n          src=\"https://images.unsplash.com/photo-1523821741446-edb2b68bb7a0?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80\"\r\n          alt=\"\"\r\n        ></img>\r\n        <Avatar src={user.photoURL} className=\"slidebar__avatar\">\r\n          {user.email[0]}\r\n        </Avatar>\r\n        <h2>{user.displayName}</h2>\r\n        <h4>{user.email}</h4>\r\n      </div>\r\n      <div className=\"slidebar__stats\">\r\n        <div className=\"slidebar__stat\">\r\n          <p>Who viewd you</p>\r\n          <p className=\"slidebar__statNumber\">2,543</p>\r\n        </div>\r\n\r\n        <div className=\"slidebar__stat\">\r\n          <p>Views on post</p>\r\n          <p className=\"slidebar__statNumber\">2,448</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"slidebar__bottom\">\r\n        <p>Recent</p>\r\n        {recentItem(\"react js\")}\r\n        {recentItem(\"programming\")}\r\n        {recentItem(\"web dev\")}\r\n        {recentItem(\"twitter clone\")}\r\n        {recentItem(\"firebase\")}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Slidebar;\r\n","import React from \"react\";\r\nimport \"./InputOption.css\";\r\n\r\nfunction InputOption({ title, Icon, color }) {\r\n  return (\r\n    <div className=\"inputOption\">\r\n      <Icon style={{ color: color }} />\r\n      <h4>{title}</h4>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputOption;\r\n","import { Avatar } from \"@material-ui/core\";\r\nimport ThumbUpAltOutlinedIcon from \"@material-ui/icons/ThumbUpAltOutlined\";\r\nimport ChatOutlinedIcon from \"@material-ui/icons/ChatOutlined\";\r\nimport ShareOutlinedIcon from \"@material-ui/icons/ShareOutlined\";\r\nimport SendOutlinedIcon from \"@material-ui/icons/SendOutlined\";\r\nimport React, { forwardRef } from \"react\";\r\nimport InputOption from \"../Input Option/InputOption\";\r\nimport \"./Post.css\";\r\n\r\nconst Post = forwardRef(({ name, description, message, photoURL }, ref) => {\r\n  return (\r\n    <div ref={ref} className=\"post\">\r\n      <div className=\"post__header\">\r\n        <Avatar src={photoURL}>{name[0]}</Avatar>\r\n        <div className=\"post__info\">\r\n          <h2>{name}</h2>\r\n          <p>{description}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"post__body\">\r\n        <p>{message}</p>\r\n      </div>\r\n      <div className=\"post__buttons\">\r\n        <InputOption color=\"gray\" title=\"Like\" Icon={ThumbUpAltOutlinedIcon} />\r\n        <InputOption color=\"gray\" title=\"Comment\" Icon={ChatOutlinedIcon} />\r\n        <InputOption color=\"gray\" title=\"Share\" Icon={ShareOutlinedIcon} />\r\n        <InputOption color=\"gray\" title=\"Like\" Icon={SendOutlinedIcon} />\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Post;\r\n","import CreateIcon from \"@material-ui/icons/Create\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport SubscriptionIcon from \"@material-ui/icons/Subscriptions\";\r\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\r\nimport CalendarViewDayIcon from \"@material-ui/icons/CalendarViewDay\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport InputOption from \"../Input Option/InputOption\";\r\nimport \"./Feed.css\";\r\nimport Post from \"../Post/Post\";\r\nimport { db } from \"../../firebase/firebase\";\r\nimport firebase from \"firebase\";\r\nimport { selectUser } from \"../../features/userSlice\";\r\nimport { useSelector } from \"react-redux\";\r\nimport FLipMove from \"react-flip-move\";\r\n\r\nfunction Feed() {\r\n  const user = useSelector(selectUser);\r\n  const [posts, setPosts] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    db.collection(\"posts\")\r\n      .orderBy(\"timestamp\", \"desc\")\r\n      .onSnapshot((snapshot) =>\r\n        setPosts(\r\n          snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            data: doc.data(),\r\n          }))\r\n        )\r\n      );\r\n  }, []);\r\n\r\n  const sendPost = (e) => {\r\n    e.preventDefault();\r\n    db.collection(\"posts\").add({\r\n      name: user.displayName,\r\n      description: user.uid,\r\n      message: input,\r\n      photoURL: user.photoURL,\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"feed\">\r\n      <div className=\"feed__inputContainer\">\r\n        <div className=\"feed__input\">\r\n          <CreateIcon />\r\n          <form action=\"#\">\r\n            <input\r\n              value={input}\r\n              onChange={(e) => setInput(e.target.value)}\r\n              type=\"text\"\r\n            />\r\n            <button onClick={sendPost} type=\"submit\">\r\n              Send\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div className=\"feed__inputOption\">\r\n          <InputOption title=\"Photo\" Icon={ImageIcon} color=\"#70B5F9\" />\r\n          <InputOption title=\"Video\" Icon={SubscriptionIcon} color=\"#E7A33E\" />\r\n          <InputOption title=\"Event\" Icon={EventNoteIcon} color=\"#C0CBCD\" />\r\n          <InputOption\r\n            title=\"Write arcticle\"\r\n            Icon={CalendarViewDayIcon}\r\n            color=\"#7FC15E\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <FLipMove>\r\n        {posts.map(({ id, data: { name, message, photoURL } }) => (\r\n          <Post key={id} name={name} message={message} photoURL={photoURL} />\r\n        ))}\r\n      </FLipMove>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Feed;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from \"../../features/userSlice\";\r\nimport { auth } from \"../../firebase/firebase\";\r\nimport \"./Login.css\";\r\n\r\nfunction Login() {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const register = () => {\r\n    if (!name) {\r\n      return alert(\"Please enter a full name!\");\r\n    }\r\n    auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((userAuth) => {\r\n        userAuth.user\r\n          .updateProfile({\r\n            displayName: name,\r\n          })\r\n          .then(() => {\r\n            dispatch(\r\n              login({\r\n                email: userAuth.user.email,\r\n                uid: userAuth.user.uid,\r\n                displayName: userAuth.user.displayName,\r\n                photoURL: userAuth.user.photoURL,\r\n              })\r\n            );\r\n          });\r\n      })\r\n      .catch((error) => alert(error));\r\n  };\r\n  const loginToApp = (e) => {\r\n    e.preventDefault();\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((userAuth) => {\r\n        dispatch(\r\n          login({\r\n            email: userAuth.user.email,\r\n            uid: userAuth.user.uid,\r\n            displayName: userAuth.user.displayName,\r\n            photoURL: userAuth.user.photoURL,\r\n          })\r\n        );\r\n      })\r\n      .catch((error) => alert(error));\r\n  };\r\n  return (\r\n    <div className=\"login\">\r\n      <img\r\n        src=\"http://www.flaticon.com/svg/static/icons/svg/174/174857.svg\"\r\n        alt=\"\"\r\n      />\r\n      <form>\r\n        <input\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          placeholder=\"Full name\"\r\n          type=\"text\"\r\n        />\r\n\r\n        <input\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder=\"Email\"\r\n          type=\"email\"\r\n        />\r\n\r\n        <input\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          placeholder=\"Password\"\r\n          type=\"password\"\r\n        />\r\n\r\n        <button type=\"submit\" onClick={loginToApp}>\r\n          Sign In\r\n        </button>\r\n      </form>\r\n      <p>\r\n        Not a member ?\r\n        <span className=\"login__register\" onClick={register}>\r\n          Register Now\r\n        </span>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport \"./Widgets.css\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport { FiberManualRecord } from \"@material-ui/icons\";\r\n\r\nconst Widgets = () => {\r\n  const newsArticle = (heading, subtitle) => (\r\n    <div className=\"widgets__article\">\r\n      <div className=\"widgets__articleLeft\">\r\n        <FiberManualRecord />\r\n      </div>\r\n      <div className=\"widgets__articleRight\">\r\n        <h4>{heading}</h4>\r\n        <p>{subtitle}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n  return (\r\n    <div className=\"widgets\">\r\n      <div className=\"widgets__header\">\r\n        <h2>LinkedIn News</h2>\r\n        <InfoIcon />\r\n      </div>\r\n      {newsArticle(\"COVID-19 2nd Wave\", \"Top news - 90999 readers\")}\r\n      {newsArticle(\"This is react webapp\", \"Top news - 886 readers\")}\r\n      {newsArticle(\"Tesla hits new highs\", \"Cars & auto -300 readers\")}\r\n      {newsArticle(\"Bitcoin Breaks $22k\", \"Crypto -8000 readers\")}\r\n      {newsArticle(\"Is Redux too good\", \"Code - 123 readers\")}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Widgets;\r\n","import \"./App.css\";\r\nimport React, { useEffect } from \"react\";\r\nimport Header from \"./components/header/header\";\r\nimport Slidebar from \"./components/Slidebar/Slidebar\";\r\nimport Feed from \"./components/Feed/Feed\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { login, logout, selectUser } from \"./features/userSlice\";\r\nimport Login from \"./components/Login/Login\";\r\nimport { auth } from \"./firebase/firebase\";\r\nimport Widgets from \"./components/Widgets/Widgets\";\r\nfunction App() {\r\n  const user = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((userAuth) => {\r\n      if (userAuth) {\r\n        dispatch(\r\n          login({\r\n            email: userAuth.email,\r\n            uid: userAuth.uid,\r\n            displayName: userAuth.displayName,\r\n            photoURL: userAuth.photoURL,\r\n          })\r\n        );\r\n      } else {\r\n        dispatch(logout());\r\n      }\r\n      return unsubscribe;\r\n    });\r\n  }, [dispatch]);\r\n  return (\r\n    <div className=\"app\">\r\n      <Header />\r\n      {!user ? (\r\n        <Login />\r\n      ) : (\r\n        <div className=\"app__body\">\r\n          <Slidebar />\r\n          <Feed />\r\n          <Widgets />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport userReducer from \"../features/userSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}